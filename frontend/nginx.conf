user www-data;
worker_processes auto;
pid /run/nginx.pid;

events {
    worker_connections 768;
}

env NGINX_DOMAIN;

http {
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65; # probably can be lowered
    types_hash_max_size 2048;
    server_tokens off; 

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    
    gzip on;
    gzip_disable "msie6";
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # the referrer w/out the querystring...sometimes WE are the referrer to ourselves.
    map_hash_bucket_size 128;
    map $http_referer $http_referer_path {
        "~^(?P<path>[^?]*)(\?.*)?$" $path;
    }

    # strip the query param for "/" and "/autocomplete" logging
    # /?&l=&n=&o=&r= .... how do we leave off the vars when they are blank???
    map $request_uri $p {
        ~(?<path>[^?]*) $path; # Since $uri and $request_uri can change then best to do this???
    }

    map $arg_q $query{
        "" 0;
        default 1;
    }

    map "$p:$query" $req_uri{
        "/:1" "/$is_args&q=[redacted]&l=$arg_l&n=$arg_n&o=$arg_o&p=$arg_p&r=$arg_r&ref=$arg_ref&d=$arg_d";
        "/autocomplete:1" "/autocomplete$is_args";
        "~/image/.+:0" "/image/wikimedia_image"; # remove the actual image from the url
        default $request_uri;
    }

    log_format minimal '$time_local $http_referer_path $status $request_time $req_uri';
    access_log /var/log/nginx/access.log minimal; # can't customize error.log format.

    limit_req_zone $binary_remote_addr zone=autocomplete:10m rate=5r/s;
    limit_req_zone $binary_remote_addr zone=static:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=basic:10m rate=1r/s;
    limit_req_zone $binary_remote_addr zone=images:100m rate=100r/s;
    limit_conn_zone $binary_remote_addr zone=addr:10m; # limit # of open connections for an IP

    proxy_cache_path /tmp/nginx_cache levels=1:2 keys_zone=nginx_cache:10M max_size=100M inactive=10m;
    proxy_cache_path /tmp/image_cache levels=1:2 keys_zone=image_cache:10M max_size=100M inactive=1440m;
    proxy_cache_lock on;
    proxy_cache_use_stale updating;
    proxy_cache_valid 200 302 10m;
    proxy_cache_valid 404      1m;

    server {
        client_body_timeout 5s;
        client_header_timeout 5s;

        # ngx_pagespeed
        pagespeed on;
        pagespeed FileCachePath /var/ngx_pagespeed_cache;
        location ~ "\.pagespeed\.([a-z]\.)?[a-z]{2}\.[^.]{10}\.[^.]+" {
            add_header "" "";
        }
        location ~ "^/pagespeed_static/" { }
        location ~ "^/ngx_pagespeed_beacon$" { }
        #pagespeed InPlaceSMaxAgeSec 2592000; # 30 days

        root /var/www/html;
        server_tokens on;
        listen 80 default_server;
        listen [::]:80 default_server;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

        set_by_lua $nginx_domain 'return os.getenv("NGINX_DOMAIN")';
        server_name $nginx_domain www.$nginx_domain;

        # custom headers
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains";
        add_header X-Content-Type-Options "nosniff";
        add_header Referrer-Policy "origin"; # Don't send search query when clicking on a link.
        # unsafe-eval for our calculator. img-src & worker-src for mapbox
        add_header Content-Security-Policy "default-src https: 'unsafe-inline' 'unsafe-eval'; img-src 'self' https://* blob: data:; worker-src 'self' blob:; object-src 'self' data:;";
        add_header X-XSS-Protection "1;mode=block"; # only necessary for older browsers w/out Content-Security-Policy.
        add_header X-Cache-Status $upstream_cache_status; # cache hit/miss

        location /autocomplete {
            proxy_pass http://127.0.0.1:8000;
            proxy_cache nginx_cache;
            limit_req zone=autocomplete burst=10 nodelay;
            limit_conn addr 10;
        }

        location /image {
            add_header Cache-Control "public, max-age=2592000"; # 30 days
            proxy_pass http://127.0.0.1:8000;
            proxy_cache image_cache;
            proxy_cache_valid 200 302 14400m; # 10 days
            limit_req zone=images burst=1000 nodelay;
            limit_conn addr 10;
        }

        location /static {
            proxy_pass http://127.0.0.1:8000;
            proxy_cache nginx_cache;
            limit_req zone=static burst=25 nodelay;
            limit_conn addr 10;
        }

        location / {
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_set_header Host $host;
            proxy_pass http://127.0.0.1:8000;
            limit_req zone=basic burst=10 nodelay;
            limit_conn addr 10;
        }       

	# Lua can't dynamically set the domain here so path has to be "/etc/letsencrypt/live/domain"
        listen [::]:443 ssl ipv6only=on;
        listen 443 ssl;
        ssl_certificate /etc/letsencrypt/live/domain/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/domain/privkey.pem;
        include /etc/letsencrypt/options-ssl-nginx.conf;
        if ($scheme != "https") {
          return 301 https://$host$request_uri;
        }
    }
}